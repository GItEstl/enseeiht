function [t, x] = newton( f, grad, hess, x0 )
%   Determine min f(x) pour x dans R^n
%   Detailed explanation goes here

% t = ordre si solution trouvee et -1 si nbIterations atteints

t = -1;
% nb iterations apres lesqulles on s'arrete
nbIterations = 1000;

x = x0;

var = sym('x', [length(x) 1]);
grad = gradient(f, var);
hess = hessian(f, var);

k = 0;

epsilon = 1/10^8;

testArret1 = false;
testArret2 = false;
testArret3 = false;
testArret4 = false;

g = subs(g, var, x);
    H = subs(h, var, x);
    
while ~testArret3
    % Calcul de d
    d = - H \ g;
    % Mise a jour des variables
    x_ancien = x;
    g_ancien = g;
    H_ancien = H;
    g = subs(g, var, x);
    H = subs(h, var, x);
    x = x+d;
    k = k+1;
    t = k;
    
    testArret1 = norm(grad(x)) <= eps(grad(x) + epsilon);
    testArret2 = norm(x-x_ancien) <= eps(norm(x_ancien) + epsilon);
    testArret3 = norm(f(x)-f(x_ancien)) <= eps(abs(f(x_ancien)) + epsilon);
    testArret4 = k >= nbIterations;
end;

if k < nbIterations
    t = k;

end

